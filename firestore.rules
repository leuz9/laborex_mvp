rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isPharmacy() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'pharmacy';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidRating() {
      return request.resource.data.rating >= 1 && 
             request.resource.data.rating <= 5;
    }

    // Users collection
    match /users/{userId} {
      allow read: if true;  // Permettre la lecture pour l'authentification
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin() || (
        // Permettre aux clients de noter les pharmacies
        isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'pharmacy' &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ratings']) &&
        request.resource.data.ratings.size() == resource.data.ratings.size() + 1 &&
        isValidRating()
      );
      allow delete: if isAdmin();
    }

    // Medications collection
    match /medications/{medicationId} {
      allow read: if true;  // Permettre la lecture publique
      allow create, update: if isAdmin() || isPharmacy();
      allow delete: if isAdmin();
    }

    // Requests collection
    match /requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isPharmacy() || 
        isAdmin() ||
        isOwner(resource.data.userId)
      );
      allow delete: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) ||
        resource.data.pharmacyId == request.auth.uid ||
        isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        // Permettre aux clients de noter leurs commandes
        (isOwner(resource.data.userId) && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'comment', 'ratedAt']) &&
         isValidRating()) ||
        // Permettre aux pharmacies de mettre Ã  jour le statut
        (resource.data.pharmacyId == request.auth.uid && 
         request.resource.data.diff(resource.data).affectedKeys().hasAny(['status', 'preparedAt', 'readyAt', 'completedAt'])) ||
        isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) ||
        isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isOwner(resource.data.userId) ||
        isAdmin()
      );
      allow delete: if isAdmin();
    }
  }
}